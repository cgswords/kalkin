<?xml version="1.0" encoding="UTF-8"?>

<language id="kalkin" _name="Kalkin" version="1.0" _section="Sources">
	
	<!--
		Information about this language description.
	-->
	<metadata>
		<property name="mimetypes">text/x-kalkin;text/x-kalkinscript</property>
		<property name="globs">*.k;*.ks</property>
		<property name="line-comment-start">//</property>
		<property name="block-comment-start">/*</property>
		<property name="block-comment-end">*/</property>
	</metadata>
	
	<!--
		Information on what the highlighting should look like.
	-->
	<styles>
		<style id="boolean"	_name="Boolean"   map-to="def:boolean" />
		<style id="comment"	_name="Comment"   map-to="def:comment" />
		<style id="keyword"	_name="Keyword"   map-to="def:keyword" />
		<style id="number"	_name="Number"    map-to="def:decimal" />
		<style id="string"	_name="String"    map-to="def:string"  />
		<style id="type"	_name="Data Type" map-to="def:type"    />
	</styles>
	
	<!--
		The language definition proper.
	-->
	<definitions>
		<!-- The main Kalkin context -->
		<context id="kalkin" class="no-spell-check">
			<include>
				<!-- Use the default highliting for C style comments -->
				<context ref="def:c-like-comment"/>
				<context ref="def:c-like-comment-multiline"/>
				<context ref="def:c-like-close-comment-outside-comment"/>
				
				<context ref="boolean"	/>
				<context ref="keyword"	/>
				<context ref="number"	/>
				<context ref="string"	/>
				<context ref="type"		/>
			</include>
		</context>
		
		<context id="boolean" style-ref="boolean">
			<keyword>true</keyword>
			<keyword>false</keyword>
		</context>
		
		<!-- Chapel's keywords context -->
		<context id="keyword"  style-ref="keyword">
			<keyword>class</keyword>
			<keyword>else</keyword>
			<keyword>false</keyword>
			<keyword>if</keyword>
			<keyword>let</keyword>
			<keyword>nil</keyword>
			<keyword>return</keyword>
			<keyword>then</keyword>
			<keyword>true</keyword>
		</context>
		
		<!-- Chapel's number context -->
		<context id="number" style-ref="number">
			<match>[+-]?((0x[abcdef\d]+)|(([\d]*\.)?[\d]+([eE][+-]?[\d]+)?))</match>
		</context>
		
		<!-- Chapel's string context -->
		<context id="string" end-at-line-end="true" style-ref="string" class="spell-check">
			<start>"</start>
			<end>"</end>
			
			<include>
				<context id="escape" style-ref="escaped-character">
					<match>\\.</match>
				</context>
			</include>
		</context>
		
		<!-- Chapel's type keywords context -->
		<context id="type"  style-ref="type">
			<match>[A-Z][A-Za-z_]</match>
		</context>
	</definitions>
</language>
